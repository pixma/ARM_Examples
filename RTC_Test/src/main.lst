   1              		.code	16
   2              		.file	"main.c"
  10              	.Ltext0:
  11              		.align	2
  12              		.global	digitalWrite
  13              		.code 16
  14              		.thumb_func
  16              	digitalWrite:
  17              	.LFB3:
  18              		.file 1 "Src/main.c"
   1:Src/main.c    **** //Main c source code
   2:Src/main.c    **** 
   3:Src/main.c    **** #include <stdafx.h>
   4:Src/main.c    **** #include <string.h>
   5:Src/main.c    **** 
   6:Src/main.c    **** static char chPinStateLow[] = "pin state low\n";
   7:Src/main.c    **** static char chPinStatehigh[] = "pin state High\n";
   8:Src/main.c    **** 
   9:Src/main.c    **** RTCTime local_time, current_time;
  10:Src/main.c    **** 
  11:Src/main.c    **** int main(){	
  12:Src/main.c    **** 	
  13:Src/main.c    **** 	DWORD counter = 0;	
  14:Src/main.c    **** 	timer_counter = counter;
  15:Src/main.c    **** 	
  16:Src/main.c    **** 	init_VIC();				//initiate vector interrupted control regs.
  17:Src/main.c    **** 	init_timer();			// init timers for delays.
  18:Src/main.c    **** 	
  19:Src/main.c    **** 	UARTInit( 9600 );		//init uart with 9600 baud rate.	
  20:Src/main.c    **** 	
  21:Src/main.c    ****     /* Initialize RTC module */
  22:Src/main.c    ****     RTCInit();
  23:Src/main.c    **** 
  24:Src/main.c    ****     local_time.RTC_Sec = 0;
  25:Src/main.c    ****     local_time.RTC_Min = 40;
  26:Src/main.c    ****     local_time.RTC_Hour = 17;
  27:Src/main.c    ****     local_time.RTC_Mday = 12;
  28:Src/main.c    ****     local_time.RTC_Wday = 1;
  29:Src/main.c    ****     local_time.RTC_Yday = 344;		/* current date 12/09/20013 17:40:00*/
  30:Src/main.c    ****     local_time.RTC_Mon = 12;
  31:Src/main.c    ****     local_time.RTC_Year = 2013;
  32:Src/main.c    ****     RTCSetTime( local_time );		/* Set local time */
  33:Src/main.c    **** 	RTCStart();
  34:Src/main.c    **** 		
  35:Src/main.c    **** 	/* Initialize timer for GPIO toggling timing */
  36:Src/main.c    **** 	enable_timer( 0 );
  37:Src/main.c    **** 	
  38:Src/main.c    **** 	//set gpios direction
  39:Src/main.c    **** 	IODIR0 |= (1 << 8 );	// set p0.8 pin as output.	
  40:Src/main.c    **** 	IOSET0 |= ( 1 << 8 );	//set p0.8 pin as high. 3.3v
  41:Src/main.c    **** 	
  42:Src/main.c    **** 	while( 1 ){
  43:Src/main.c    **** 		
  44:Src/main.c    **** 		while( !((timer_counter - counter) == 1) );
  45:Src/main.c    **** 		pinState = !pinState;
  46:Src/main.c    **** 		digitalWrite( pinState );
  47:Src/main.c    **** 		counter = timer_counter;
  48:Src/main.c    **** 		printPinState( pinState );
  49:Src/main.c    **** 		current_time = RTCGetTime();
  50:Src/main.c    **** 		printToSerial( (DWORD *)"\n" );
  51:Src/main.c    **** 		printToSerial( (DWORD *)"Date : " );
  52:Src/main.c    **** 		printToSerial( current_time.RTC_Mon );
  53:Src/main.c    **** 		printToSerial( (DWORD *)"/" );
  54:Src/main.c    **** 		printToSerial( current_time.RTC_Mon );
  55:Src/main.c    **** 		printToSerial( (DWORD *)"/" );
  56:Src/main.c    **** 		printToSerial( current_time.RTC_Year );
  57:Src/main.c    **** 		
  58:Src/main.c    **** 		printToSerial( (DWORD *)"\n\n" );
  59:Src/main.c    **** 		printToSerial( (DWORD *)"Time: " );
  60:Src/main.c    **** 		printToSerial( current_time.RTC_Hour );
  61:Src/main.c    **** 		printToSerial( (DWORD *)":" );
  62:Src/main.c    **** 		printToSerial( current_time.RTC_Min );
  63:Src/main.c    **** 		printToSerial( (DWORD *)":" );
  64:Src/main.c    **** 		printToSerial( current_time.RTC_Sec );
  65:Src/main.c    **** 		
  66:Src/main.c    **** 		printToSerial( "\n\n" );
  67:Src/main.c    **** 	}
  68:Src/main.c    **** 	return 0;
  69:Src/main.c    **** }
  70:Src/main.c    **** 
  71:Src/main.c    **** int digitalWrite( DWORD state ){
  19              	:
  20              		@ lr needed for prologue
  21              		.loc 1 72 0
  72:Src/main.c    **** 	switch( state ){
  22              	p	r0, #0
  23 0000 0028     		beq	.L3
  24 0002 02D0     		cmp	r0, #1
  25 0004 0128     		bne	.L2
  26 0006 08D1     		b	.L4
  27 0008 01E0     	.L3:
  28              		.loc 1 74 0
  73:Src/main.c    **** 		case 0:
  74:Src/main.c    **** 			IOCLR0 |= ( 1<< 8 );
  29              	, .L7
  30 000a 0549     		b	.L6
  31 000c 00E0     	.L4:
  32              		.loc 1 77 0
  75:Src/main.c    **** 		break;
  76:Src/main.c    **** 		case 1:
  77:Src/main.c    **** 			IOSET0 |= ( 1 << 8 );
  33              		r1, .L7+4
  34 000e 0549     	.L6:
  35              		ldr	r2, [r1]
  36 0010 0A68     		mov	r3, #128
  37 0012 8023     		lsl	r3, r3, #1
  38 0014 5B00     		orr	r2, r2, r3
  39 0016 1A43     		str	r2, [r1]
  40 0018 0A60     	.L2:
  41              		.loc 1 81 0
  78:Src/main.c    **** 		break;
  79:Src/main.c    **** 	}
  80:Src/main.c    **** 	return 0;
  81:Src/main.c    **** }
  42              	#0
  43 001a 0020     	.LVL1:
  44              		@ sp needed for prologue
  45              		bx	lr
  46 001c 7047     	.L8:
  47              		.align	2
  48 001e 0000     	.L7:
  49              		.word	-536707060
  50 0020 0C8002E0 		.word	-536707068
  51 0024 048002E0 	.LFE3:
  53              		.align	2
  54              		.global	printToSerial
  55              		.code 16
  56              		.thumb_func
  58              	printToSerial:
  59              	.LFB5:
  60              		.loc 1 95 0
  82:Src/main.c    **** 
  83:Src/main.c    **** void printPinState( DWORD dState ){
  84:Src/main.c    **** 	switch( dState ){
  85:Src/main.c    **** 		case 0:
  86:Src/main.c    **** 			UART_DataSend( (BYTE *)chPinStateLow, strlen( chPinStateLow ) );
  87:Src/main.c    **** 		break;
  88:Src/main.c    **** 		case 1:
  89:Src/main.c    **** 			UART_DataSend( (BYTE *)chPinStatehigh, strlen( chPinStatehigh ) );
  90:Src/main.c    **** 		break;
  91:Src/main.c    **** 	}
  92:Src/main.c    **** 	
  93:Src/main.c    **** }
  94:Src/main.c    **** 
  95:Src/main.c    **** void printToSerial( DWORD dWord){
  61              	I0:
  62 0028 10B5     	.LVL2:
  63              		.loc 1 95 0
  64              		mov	r4, r0
  65              		.loc 1 96 0
  66 002a 041C     		bl	strlen
  96:Src/main.c    **** 	UART_DataSend( (BYTE *)dWord, strlen( dWord ) );
  67              	
  68 002c FFF7FEFF 		mov	r1, r0
  69              		mov	r0, r4
  70 0030 011C     		bl	UART_DataSend
  71 0032 201C     		.loc 1 97 0
  72 0034 FFF7FEFF 		@ sp needed for prologue
  97:Src/main.c    **** }
  73              	:
  74              		pop	{r4}
  75              		pop	{r0}
  76 0038 10BC     		bx	r0
  77 003a 01BC     	.LFE5:
  79              		.align	2
  80              		.global	printPinState
  81 003e 0000     		.code 16
  82              		.thumb_func
  84              	printPinState:
  85              	.LFB4:
  86              		.loc 1 83 0
  87              		push	{r4, lr}
  88              	.LCFI1:
  89 0040 10B5     	.LVL5:
  90              		.loc 1 84 0
  91              		cmp	r0, #0
  92              		beq	.L13
  93 0042 0028     		cmp	r0, #1
  94 0044 02D0     		bne	.L15
  95 0046 0128     		b	.L14
  96 0048 0DD1     	.L13:
  97 004a 04E0     		.loc 1 86 0
  98              		ldr	r4, .L17
  99              		mov	r0, r4
 100 004c 074C     	.LVL6:
 101 004e 201C     		bl	strlen
 102              		b	.L16
 103 0050 FFF7FEFF 	.LVL7:
 104 0054 03E0     	.L14:
 105              		.loc 1 89 0
 106              		ldr	r4, .L17+4
 107              		mov	r0, r4
 108 0056 064C     	.LVL8:
 109 0058 201C     		bl	strlen
 110              	.L16:
 111 005a FFF7FEFF 		mov	r1, r0
 112              		mov	r0, r4
 113 005e 011C     		bl	UART_DataSend
 114 0060 201C     	.LVL9:
 115 0062 FFF7FEFF 	.L15:
 116              		.loc 1 93 0
 117              		@ sp needed for prologue
 118              		pop	{r4}
 119              		pop	{r0}
 120 0066 10BC     		bx	r0
 121 0068 01BC     	.L18:
 122 006a 0047     		.align	2
 123              	.L17:
 124              		.word	chPinStateLow
 125              		.word	chPinStatehigh
 126 006c 00000000 	.LFE4:
 128              		.section	.rodata.str1.4,"aMS",%progbits,1
 129              		.align	2
 130              	.LC6:
 131              		.ascii	"\012\000"
 132              		.align	2
 133 0000 0A00     	.LC8:
 134 0002 0000     		.ascii	"Date : \000"
 135              		.align	2
 136 0004 44617465 	.LC10:
 136      203A2000 
 137              		.ascii	"/\000"
 138              		.align	2
 139 000c 2F00     	.LC12:
 140 000e 0000     		.ascii	"\012\012\000"
 141              		.align	2
 142 0010 0A0A00   	.LC14:
 143 0013 00       		.ascii	"Time: \000"
 144              		.align	2
 145 0014 54696D65 	.LC16:
 145      3A2000
 146 001b 00       		.ascii	":\000"
 147              		.text
 148 001c 3A00     		.align	2
 149 001e 0000     		.global	main
 150              		.code 16
 151              		.thumb_func
 153              	main:
 154              	.LFB2:
 155              		.loc 1 11 0
 156              		push	{r4, r5, r6, r7, lr}
 157              	.LCFI2:
 158 0074 F0B5     		.loc 1 14 0
 159              		ldr	r3, .L30
 160              		mov	r4, #0
 161 0076 454B     		.loc 1 11 0
 162 0078 0024     		sub	sp, sp, #48
 163              	.LCFI3:
 164 007a 8CB0     		.loc 1 14 0
 165              		str	r4, [r3]
 166              		.loc 1 16 0
 167 007c 1C60     		bl	init_VIC
 168              		.loc 1 17 0
 169 007e FFF7FEFF 		bl	init_timer
 170              		.loc 1 19 0
 171 0082 FFF7FEFF 		mov	r0, #150
 172              		lsl	r0, r0, #6
 173 0086 9620     		bl	UARTInit
 174 0088 8001     		.loc 1 22 0
 175 008a FFF7FEFF 		bl	RTCInit
 176              		.loc 1 24 0
 177 008e FFF7FEFF 		ldr	r2, .L30+4
 178              		.loc 1 25 0
 179 0092 3F4A     		mov	r3, #40
 180              		str	r3, [r2, #4]
 181 0094 2823     		.loc 1 26 0
 182 0096 5360     		mov	r3, #17
 183              		str	r3, [r2, #8]
 184 0098 1123     		.loc 1 28 0
 185 009a 9360     		mov	r3, #1
 186              		str	r3, [r2, #24]
 187 009c 0123     		.loc 1 29 0
 188 009e 9361     		mov	r3, #172
 189              		lsl	r3, r3, #1
 190 00a0 AC23     		str	r3, [r2, #28]
 191 00a2 5B00     		.loc 1 31 0
 192 00a4 D361     		ldr	r3, .L30+8
 193              		.loc 1 24 0
 194 00a6 3B4B     		str	r4, [r2]
 195              		.loc 1 27 0
 196 00a8 1460     		mov	r1, #12
 197              		str	r1, [r2, #12]
 198 00aa 0C21     		.loc 1 30 0
 199 00ac D160     		str	r1, [r2, #16]
 200              		.loc 1 31 0
 201 00ae 1161     		str	r3, [r2, #20]
 202              		.loc 1 32 0
 203 00b0 5361     		add	r2, r2, #16
 204              		mov	r3, sp
 205 00b2 1032     		ldmia	r2!, {r0, r1, r4}
 206 00b4 6B46     		stmia	r3!, {r0, r1, r4}
 207 00b6 13CA     		ldr	r3, [r2]
 208 00b8 13C3     		mov	r1, #40
 209 00ba 1368     		mov	r2, #17
 210 00bc 2821     		mov	r0, #0
 211 00be 1122     		str	r3, [sp, #12]
 212 00c0 0020     		mov	r3, #12
 213 00c2 0393     		bl	RTCSetTime
 214 00c4 0C23     		.loc 1 33 0
 215 00c6 FFF7FEFF 		bl	RTCStart
 216              		.loc 1 36 0
 217 00ca FFF7FEFF 		mov	r0, #0
 218              		bl	enable_timer
 219 00ce 0020     		.loc 1 39 0
 220 00d0 FFF7FEFF 		ldr	r1, .L30+12
 221              		mov	r2, #128
 222 00d4 3049     		ldr	r3, [r1]
 223 00d6 8022     		lsl	r2, r2, #1
 224 00d8 0B68     		orr	r3, r3, r2
 225 00da 5200     		str	r3, [r1]
 226 00dc 1343     		.loc 1 40 0
 227 00de 0B60     		sub	r1, r1, #4
 228              		ldr	r3, [r1]
 229 00e0 0439     		orr	r3, r3, r2
 230 00e2 0B68     		str	r3, [r1]
 231 00e4 1343     		mov	r7, #0
 232 00e6 0B60     	.LVL10:
 233 00e8 0027     	.L29:
 234              		.loc 1 44 0
 235              		ldr	r5, .L30
 236              		ldr	r3, [r5]
 237 00ea 284D     		sub	r3, r3, r7
 238 00ec 2B68     		cmp	r3, #1
 239 00ee DB1B     		bne	.L29
 240 00f0 012B     		.loc 1 45 0
 241 00f2 FAD1     		ldr	r4, .L30+16
 242              		ldr	r3, [r4]
 243 00f4 294C     		mov	r0, #0
 244 00f6 2368     		cmp	r3, #0
 245 00f8 0020     		bne	.L22
 246 00fa 002B     		mov	r0, #1
 247 00fc 00D1     	.L22:
 248 00fe 0120     		str	r0, [r4]
 249              		.loc 1 46 0
 250 0100 2060     		bl	digitalWrite
 251              		.loc 1 48 0
 252 0102 FFF7FEFF 		ldr	r0, [r4]
 253              		.loc 1 47 0
 254 0106 2068     		ldr	r7, [r5]
 255              		.loc 1 49 0
 256 0108 2F68     		add	r4, sp, #16
 257              		.loc 1 48 0
 258 010a 04AC     		bl	printPinState
 259              		.loc 1 49 0
 260 010c FFF7FEFF 		ldr	r5, .L30+20
 261              		mov	r0, r4
 262 0110 234D     		bl	RTCGetTime
 263 0112 201C     		mov	r3, r4
 264 0114 FFF7FEFF 		mov	r2, r5
 265 0118 231C     		ldmia	r3!, {r0, r1, r6}
 266 011a 2A1C     		stmia	r2!, {r0, r1, r6}
 267 011c 43CB     		ldmia	r3!, {r0, r4, r6}
 268 011e 43C2     		stmia	r2!, {r0, r4, r6}
 269 0120 51CB     		.loc 1 50 0
 270 0122 51C2     		ldr	r0, .L30+24
 271              		.loc 1 49 0
 272 0124 1F48     		ldmia	r3!, {r1, r4}
 273              		stmia	r2!, {r1, r4}
 274 0126 12CB     		.loc 1 50 0
 275 0128 12C2     		bl	printToSerial
 276              		.loc 1 51 0
 277 012a FFF7FEFF 		ldr	r0, .L30+28
 278              		bl	printToSerial
 279 012e 1E48     		.loc 1 52 0
 280 0130 FFF7FEFF 		ldr	r0, [r5, #16]
 281              		bl	printToSerial
 282 0134 2869     		.loc 1 53 0
 283 0136 FFF7FEFF 		ldr	r4, .L30+32
 284              		mov	r0, r4
 285 013a 1C4C     		bl	printToSerial
 286 013c 201C     		.loc 1 54 0
 287 013e FFF7FEFF 		ldr	r0, [r5, #16]
 288              		bl	printToSerial
 289 0142 2869     		.loc 1 55 0
 290 0144 FFF7FEFF 		mov	r0, r4
 291              		bl	printToSerial
 292 0148 201C     		.loc 1 56 0
 293 014a FFF7FEFF 		ldr	r0, [r5, #20]
 294              		bl	printToSerial
 295 014e 6869     		.loc 1 58 0
 296 0150 FFF7FEFF 		ldr	r6, .L30+36
 297              		mov	r0, r6
 298 0154 164E     		bl	printToSerial
 299 0156 301C     		.loc 1 59 0
 300 0158 FFF7FEFF 		ldr	r0, .L30+40
 301              		bl	printToSerial
 302 015c 1548     		.loc 1 60 0
 303 015e FFF7FEFF 		ldr	r0, [r5, #8]
 304              		bl	printToSerial
 305 0162 A868     		.loc 1 61 0
 306 0164 FFF7FEFF 		ldr	r4, .L30+44
 307              		mov	r0, r4
 308 0168 134C     		bl	printToSerial
 309 016a 201C     		.loc 1 62 0
 310 016c FFF7FEFF 		ldr	r0, [r5, #4]
 311              		bl	printToSerial
 312 0170 6868     		.loc 1 63 0
 313 0172 FFF7FEFF 		mov	r0, r4
 314              		bl	printToSerial
 315 0176 201C     		.loc 1 64 0
 316 0178 FFF7FEFF 		ldr	r0, [r5]
 317              		bl	printToSerial
 318 017c 2868     		.loc 1 66 0
 319 017e FFF7FEFF 		mov	r0, r6
 320              		bl	printToSerial
 321 0182 301C     		b	.L29
 322 0184 FFF7FEFF 	.L31:
 323 0188 AFE7     		.align	2
 324              	.L30:
 325 018a 0000     		.word	timer_counter
 326              		.word	local_time
 327 018c 00000000 		.word	2013
 328 0190 00000000 		.word	-536707064
 329 0194 DD070000 		.word	pinState
 330 0198 088002E0 		.word	current_time
 331 019c 00000000 		.word	.LC6
 332 01a0 00000000 		.word	.LC8
 333 01a4 00000000 		.word	.LC10
 334 01a8 04000000 		.word	.LC12
 335 01ac 0C000000 		.word	.LC14
 336 01b0 10000000 		.word	.LC16
 337 01b4 14000000 	.LFE2:
 339              		.global	pinState
 340              		.bss
 341              		.align	2
 344              	pinState:
 345              		.space	4
 346              		.data
 347 0000 00000000 		.align	2
 350              	chPinStateLow:
 351              		.ascii	"pin state low\012\000"
 352              		.align	2
 355              	chPinStatehigh:
 356              		.ascii	"pin state High\012\000"
 357              		.comm	local_time,32,4
 358 0010 70696E20 		.comm	current_time,32,4
 358      73746174 
 358      65204869 
 358      67680A00 
 359              		.section	.debug_frame,"",%progbits
 360              	.Lframe0:
 447              	.Ldebug_loc0:
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\ANNIMB~1\AppData\Local\Temp/ccsraaaa.s:1      .text:00000000 $t
C:\Users\ANNIMB~1\AppData\Local\Temp/ccsraaaa.s:16     .text:00000000 digitalWrite
C:\Users\ANNIMB~1\AppData\Local\Temp/ccsraaaa.s:50     .text:00000020 $d
C:\Users\ANNIMB~1\AppData\Local\Temp/ccsraaaa.s:59     .text:00000028 printToSerial
C:\Users\ANNIMB~1\AppData\Local\Temp/ccsraaaa.s:56     .text:00000028 $t
C:\Users\ANNIMB~1\AppData\Local\Temp/ccsraaaa.s:86     .text:00000040 printPinState
C:\Users\ANNIMB~1\AppData\Local\Temp/ccsraaaa.s:126    .text:0000006c $d
C:\Users\ANNIMB~1\AppData\Local\Temp/ccsraaaa.s:352    .data:00000000 chPinStateLow
C:\Users\ANNIMB~1\AppData\Local\Temp/ccsraaaa.s:357    .data:00000010 chPinStatehigh
C:\Users\ANNIMB~1\AppData\Local\Temp/ccsraaaa.s:155    .text:00000074 main
C:\Users\ANNIMB~1\AppData\Local\Temp/ccsraaaa.s:152    .text:00000074 $t
C:\Users\ANNIMB~1\AppData\Local\Temp/ccsraaaa.s:327    .text:0000018c $d
                            *COM*:00000020 local_time
C:\Users\ANNIMB~1\AppData\Local\Temp/ccsraaaa.s:346    .bss:00000000 pinState
                            *COM*:00000020 current_time

UNDEFINED SYMBOLS
strlen
UART_DataSend
init_VIC
init_timer
UARTInit
RTCInit
RTCSetTime
RTCStart
enable_timer
RTCGetTime
timer_counter
